Webpacks nos va a permitir empaquetar nuestras builds de React para luego poder publicarlas en otros entornos como hostings. Crearemos un proyecto de React sin create-react-app.

$npm install --save-dev @babel/cli @babel/core @babel/preset-env @babel/preset-react babel-loader
$npm install --save-dev webpack webpack-cli webpack-dev-server
$npm install --save-dev mini-css-extract-plugin css-loader
$npm install --save-dev node-sass sass-loader
$npm install --save-dev html-webpack-plugin
$npm install --save-dev source-map-loader
$npm install --save-dev documentation
$npm install --save-dev file-loader
$npm install --save-dev eslint eslint-loader

En package.json aparecen las dependencias y las dependencias dev. Si borramos node_modules y borramos las dependencias hemos borrado las librerías del proyecto. Nos interesa guardar en dependencias de desarrollo.

$npm install --save @babel/plugin-transform-modules-commonjs @babel/plugin-transform-runtime
$npm install --save react redux react-redux redux-saga
$npm install --save react react-dom react-router-dom
$npm install --save bootstrap
$npm install --save axios

.babelrc es un archivo de configuración para Babel.
En .editorconfig ponemos configuración del editor.
webpack.config.js nos permite configurar cómo vamos a empaquetar la build.

$eslint --init nos permitirá hacer setup de eslint.

Las variables de entorno son declaradas en el entorno como si fueran declaradas en archivos .js, pero son accedidas en el momento de la build y son globales. Se guardan en los archivos .env, y sin nada más ese es el por defecto. Si especificamos .env.{entorno}, estamos especificando que las variables de entorno siguientes son de un entorno concreto. Se pueden acceder en código, por ejemplo "NODE_ENV.BASE_URL".

https://app.netlify.com
Web que nos permite generar sitios a partir de git como configuraciones e integraciones con git. Podemos registrar dominios, pueden añadirse plugins y publicar proyectos completos.
